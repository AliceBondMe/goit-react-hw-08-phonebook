{"version":3,"file":"static/js/643.3614bfd1.chunk.js","mappings":"iRAGO,MAAMA,EAAYC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wPAarBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,ijBAoBpBG,EAAWL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sHASrBK,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sJAUzBQ,EAAQV,EAAAA,GAAAA,MAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yQAgBpBU,EAASZ,EAAAA,GAAAA,KAAWa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kXAapBY,GAAQd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAagB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+gBAWpBQ,EAAoBA,EAOpBE,EAAqBA,GAWtBK,EAASjB,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,+9BAiDtBiB,GAAqBnB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAoBqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,gR,sGClJtD,MAAMoB,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,SAAaC,MAAM,CAC1CJ,MAAOG,EAAAA,SAAaE,SAAS,wBAC7BJ,SAAUE,EAAAA,SAAaE,SAAS,4BAGrBC,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,MAAC7B,EAAAA,GAAO,CAAA8B,SAAA,EACNC,EAAAA,EAAAA,KAACnC,EAAAA,GAAS,CAAAkC,SAAC,mBACXC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLb,cAAeA,EACfG,iBAAkBA,EAClBW,SAXeC,CAACC,EAAQC,KAAqB,IAAnB,UAAEC,GAAWD,EAC3CT,GAASW,EAAAA,EAAAA,IAAMH,IACfE,GAAW,EASgBP,UAEvBD,EAAAA,EAAAA,MAACzB,EAAAA,GAAU,CAAA0B,SAAA,EACTD,EAAAA,EAAAA,MAAC3B,EAAAA,GAAQ,CAAA4B,SAAA,EACPC,EAAAA,EAAAA,KAACpB,EAAAA,GAAK,CAAC4B,KAAK,QAAQC,KAAK,QAAQf,UAAQ,KACzCM,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CAACkC,QAAQ,QAAOX,SAAC,WACvBC,EAAAA,EAAAA,KAACtB,EAAAA,GAAM,QAGToB,EAAAA,EAAAA,MAAC3B,EAAAA,GAAQ,CAAA4B,SAAA,EACPC,EAAAA,EAAAA,KAACpB,EAAAA,GAAK,CAAC4B,KAAK,WAAWC,KAAK,WAAWf,UAAQ,KAC/CM,EAAAA,EAAAA,KAACxB,EAAAA,GAAK,CAACkC,QAAQ,WAAUX,SAAC,cAC1BC,EAAAA,EAAAA,KAACtB,EAAAA,GAAM,QAGTsB,EAAAA,EAAAA,KAACjB,EAAAA,GAAM,CAACyB,KAAK,SAAS,aAAW,WAAUT,SAAC,YAI5CC,EAAAA,EAAAA,KAACf,EAAAA,GAAkB,CAACwB,KAAK,QAAQE,UAAU,SAC3CX,EAAAA,EAAAA,KAACf,EAAAA,GAAkB,CAACwB,KAAK,WAAWE,UAAU,eAG1C,EC1Dd,EAHkBC,KACTZ,EAAAA,EAAAA,KAACL,EAAS,G","sources":["components/Form.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormTitle = styled.h2`\n  font-family: 'Megrim';\n  font-weight: normal;\n  font-size: 48px;\n  margin-bottom: 24px;\n  animation: pulsate 1.5s infinite alternate;\n\n  @media screen and (max-width: 639px) {\n    font-size: 28px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin: 32px auto 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 480px;\n  border: 2px solid var(--basic-white);\n  border-radius: 12px;\n  padding: 40px 32px;\n  box-shadow: 0 0 0.2rem var(--basic-white), 0 0 0.2rem var(--basic-white),\n    0 0 2rem var(--basic-color), 0 0 0.8rem var(--basic-color),\n    0 0 2.8rem var(--basic-color), inset 0 0 1.3rem var(--basic-color);\n  background-color: #0000007e;\n\n  @media screen and (max-width: 639px) {\n    width: 280px;\n    padding: 32px 8px 24px 8px;\n  }\n`;\n\nexport const InputBox = styled.div`\n  position: relative;\n  width: 400px;\n\n  @media screen and (max-width: 639px) {\n    width: 220px;\n  }\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (max-width: 639px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 10px 0;\n  font-size: 20px;\n  color: var(--basic-color);\n  pointer-events: none;\n  transition: 0.5s;\n\n  @media screen and (max-width: 639px) {\n    padding: 12px 0;\n    font-size: 14px;\n  }\n`;\n\nexport const Border = styled.span`\n  position: absolute;\n  bottom: 30px;\n  left: 50%;\n  width: 0;\n  height: 1px;\n  background-color: var(--basic-white);\n  box-shadow: 0 0 0.2rem var(--basic-white), 0 0 0.2rem var(--basic-white),\n    0 0 2rem var(--basic-color), 0 0 0.8rem var(--basic-color),\n    0 0 2.8rem var(--basic-color), inset 0 0 1.3rem var(--basic-color);\n  transition: 0.4s;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 10px 0;\n  font-size: 20px;\n  color: var(--basic-color);\n  margin-bottom: 30px;\n  border: none;\n  border-bottom: 1px solid var(--lighter-color);\n  outline: none;\n  background: transparent;\n\n  &:focus ~ ${Label}, &:valid ~ ${Label} {\n    top: -20px;\n    left: 0;\n    color: var(--lighter-color);\n    font-size: 12px;\n  }\n\n  &:focus ~ ${Border}, &:valid ~ ${Border} {\n    width: 100%;\n    transition: 0.4s;\n    left: 0;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 14px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 20px 0;\n  font-family: inherit;\n  color: var(--basic-white);\n  width: 200px;\n  height: 32px;\n  padding: 4px 10px;\n  font-size: 20px;\n  font-weight: 500;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  color: var(--basic-color);\n  border: 1px solid var(--basic-color);\n  box-shadow: 0 0 5px var(--basic-color), 0 0 5px var(--basic-color) inset;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background: var(--darker-color);\n    box-shadow: 0 0 20px var(--darker-color);\n    transition: all 0.3s ease;\n  }\n\n  &:hover {\n    color: var(--basic-white);\n  }\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  &:active {\n    top: 2px;\n    text-shadow: 0 0 10px var(--basic-white);\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  width: 80%;\n  color: var(--accent-color);\n  text-shadow: 0 0 10px var(--basic-white);\n  text-align: center;\n  margin-bottom: 8px;\n  &::first-letter {\n    text-transform: uppercase;\n  }\n\n  @media screen and (max-width: 639px) {\n    width: 200px;\n  }\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Border,\n  Button,\n  ErrorMessageStyled,\n  FormStyled,\n  FormTitle,\n  Input,\n  InputBox,\n  Label,\n  Wrapper,\n} from 'components/Form.styled';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/operations';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  email: yup.string().required('An email is required'),\n  password: yup.string().required('A password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (userData, { resetForm }) => {\n    dispatch(login(userData));\n    resetForm();\n  };\n\n  return (\n    <Wrapper>\n      <FormTitle>Please Log In</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <FormStyled>\n          <InputBox>\n            <Input type=\"email\" name=\"email\" required />\n            <Label htmlFor=\"email\">Email</Label>\n            <Border></Border>\n          </InputBox>\n\n          <InputBox>\n            <Input type=\"password\" name=\"password\" required />\n            <Label htmlFor=\"password\">Password</Label>\n            <Border></Border>\n          </InputBox>\n\n          <Button type=\"submit\" aria-label=\"register\">\n            Log in\n          </Button>\n\n          <ErrorMessageStyled name=\"email\" component=\"div\" />\n          <ErrorMessageStyled name=\"password\" component=\"div\" />\n        </FormStyled>\n      </Formik>\n    </Wrapper>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\nexport default LoginPage;\n"],"names":["FormTitle","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","InputBox","_templateObject3","FormStyled","Form","_templateObject4","Label","_templateObject5","Border","_templateObject6","Input","Field","_templateObject7","Button","_templateObject8","ErrorMessageStyled","ErrorMessage","_templateObject9","initialValues","email","password","validationSchema","yup","shape","required","LoginForm","dispatch","useDispatch","_jsxs","children","_jsx","Formik","onSubmit","handleSubmit","userData","_ref","resetForm","login","type","name","htmlFor","component","LoginPage"],"sourceRoot":""}